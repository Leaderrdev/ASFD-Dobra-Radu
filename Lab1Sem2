import csv
import random
from faker import Faker

JUDETE_DISTRIBUTION = {
    1: 0.066,
    2: 0.047,
    41: 0.061
}

GENDER_DISTRIBUTION = {'M': 0.48, 'F': 0.52}

AGE_DISTRIBUTION = {
    '1950-1960': 0.08,
    '1961-1970': 0.12,
    '1971-1980': 0.15,
    '1981-1990': 0.18,
    '1991-2000': 0.22,
    '2001-2010': 0.25
}


class CNPGenerator:
    @staticmethod
    def calculate_control_digit(cnp_12):
        weights = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9]
        total = sum(int(c) * w for c, w in zip(cnp_12, weights))
        return 1 if total % 11 == 10 else total % 11

    @staticmethod
    def generate_cnp(sex, birth_year, county, sequential_number):
        s = '1' if sex == 'M' else '2'
        aa = str(birth_year % 100).zfill(2)
        ll = str(random.randint(1, 12)).zfill(2)
        zz = str(random.randint(1, 28)).zfill(2)
        jj = str(county).zfill(2)
        nnn = str(sequential_number).zfill(3)
        cnp_12 = s + aa + ll + zz + jj + nnn
        c = str(CNPGenerator.calculate_control_digit(cnp_12))
        return cnp_12 + c


def generate_names(count):
    fake = Faker('ro_RO')
    names = []
    for _ in range(count):
        gender = random.choices(['M', 'F'], weights=[0.48, 0.52])[0]
        if gender == 'M':
            names.append((gender, f"{fake.first_name_male()} {fake.last_name()}"))
        else:
            names.append((gender, f"{fake.first_name_female()} {fake.last_name()}"))
    return names


def generate_cnp_csv(filename='cnp_data_1000.csv', count=1000):
    birth_years = []
    for _ in range(count):
        age_group = random.choices(list(AGE_DISTRIBUTION.keys()), weights=list(AGE_DISTRIBUTION.values()))[0]
        start, end = map(int, age_group.split('-'))
        birth_years.append(random.randint(start, end))

    counties = random.choices(list(JUDETE_DISTRIBUTION.keys()), weights=list(JUDETE_DISTRIBUTION.values()), k=count)
    names_gender = generate_names(count)

    with open(filename, 'w', newline='', encoding='utf-8') as f:
        writer = csv.writer(f)
        writer.writerow(["CNP", "Nume complet"])  # antet
        for i in range(count):
            gender, full_name = names_gender[i]
            cnp = CNPGenerator.generate_cnp(gender, birth_years[i], counties[i], i % 999 + 1)
            writer.writerow([cnp, full_name])

    print(f"Fi»ôierul {filename} a fost generat cu succes!")


generate_cnp_csv()
