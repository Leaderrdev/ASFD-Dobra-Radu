import json
import random
import copy


with open("date_intrare.json", "r") as f:
    data = json.load(f)

bancnote = sorted(data["bancnote"], key=lambda x: -x["valoare"])
produse = data["produse"]

def calculeaza_rest(rest, bancnote_disponibile):
    dp = [None] * (rest + 1)
    dp[0] = {}

    for i in range(1, rest + 1):
        for bancnota in bancnote_disponibile:
            val = bancnota["valoare"]
            stoc = bancnota["stoc"]

            if i >= val and dp[i - val] is not None:
                prev = dp[i - val]
                if prev.get(val, 0) < stoc:
                    nou = prev.copy()
                    nou[val] = nou.get(val, 0) + 1

                    if dp[i] is None or sum(nou.values()) < sum(dp[i].values()):
                        dp[i] = nou

    return dp[rest]


nr_clienti = 0
while True:
    nr_clienti += 1
    produs = random.choice(produse)
    pret = produs["pret"]
    plata = pret + random.randint(1, 20)
    rest_de_dat = plata - pret

    print(f"Client {nr_clienti}:")
    print(f"  Produs: {produs['nume']}")
    print(f"  Preț: {pret} lei")
    print(f"  Plătit: {plata} lei")
    print(f"  Rest: {rest_de_dat} lei")

    rezultat = calculeaza_rest(rest_de_dat, bancnote)

    if rezultat is None:
        print("Nu se poate oferi restul cu bancnotele disponibile.")
        print("Simularea se oprește.")
        break

    print("  Rest oferit:")
    for val, cnt in sorted(rezultat.items(), reverse=True):
        print(f"    {cnt} x {val} lei")


    for bancnota in bancnote:
        val = bancnota["valoare"]
        if val in rezultat:
            bancnota["stoc"] -= rezultat[val]

    print("")
